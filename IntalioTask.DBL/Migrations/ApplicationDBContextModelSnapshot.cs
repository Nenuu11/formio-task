// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntalioTask.DBL.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IntalioTask.DBL.Entities.Applicant", b =>
                {
                    b.Property<int>("ApplicantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicantId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("CoverLetter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DegreeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GraduationYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("ApplicantId");

                    b.HasIndex("CityId");

                    b.HasIndex("DegreeId");

                    b.ToTable("Applicant");
                });

            modelBuilder.Entity("IntalioTask.DBL.Entities.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CityName = "Cairo",
                            CountryId = 1
                        },
                        new
                        {
                            CityId = 2,
                            CityName = "Alex",
                            CountryId = 1
                        },
                        new
                        {
                            CityId = 3,
                            CityName = "Aswan",
                            CountryId = 1
                        },
                        new
                        {
                            CityId = 4,
                            CityName = "New York",
                            CountryId = 2
                        },
                        new
                        {
                            CityId = 5,
                            CityName = "Chicago",
                            CountryId = 2
                        },
                        new
                        {
                            CityId = 6,
                            CityName = "Philadelphia",
                            CountryId = 2
                        },
                        new
                        {
                            CityId = 7,
                            CityName = "Riyadh",
                            CountryId = 3
                        },
                        new
                        {
                            CityId = 8,
                            CityName = "Geddah",
                            CountryId = 3
                        },
                        new
                        {
                            CityId = 9,
                            CityName = "Makkah",
                            CountryId = 3
                        },
                        new
                        {
                            CityId = 10,
                            CityName = "Dubai",
                            CountryId = 4
                        },
                        new
                        {
                            CityId = 11,
                            CityName = "Abu Dhabi",
                            CountryId = 4
                        },
                        new
                        {
                            CityId = 12,
                            CityName = "Al-ain",
                            CountryId = 4
                        },
                        new
                        {
                            CityId = 13,
                            CityName = "Paris",
                            CountryId = 5
                        },
                        new
                        {
                            CityId = 14,
                            CityName = "Nice",
                            CountryId = 5
                        },
                        new
                        {
                            CityId = 15,
                            CityName = "Saint Malo",
                            CountryId = 5
                        },
                        new
                        {
                            CityId = 16,
                            CityName = "Luxor",
                            CountryId = 1
                        },
                        new
                        {
                            CityId = 17,
                            CityName = "Ashareqah",
                            CountryId = 4
                        },
                        new
                        {
                            CityId = 18,
                            CityName = "Al-Madinah",
                            CountryId = 3
                        });
                });

            modelBuilder.Entity("IntalioTask.DBL.Entities.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CountryId");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryName = "Egypt"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryName = "USA"
                        },
                        new
                        {
                            CountryId = 3,
                            CountryName = "KSA"
                        },
                        new
                        {
                            CountryId = 4,
                            CountryName = "UAE"
                        },
                        new
                        {
                            CountryId = 5,
                            CountryName = "France"
                        });
                });

            modelBuilder.Entity("IntalioTask.DBL.Entities.Degree", b =>
                {
                    b.Property<int>("DegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DegreeId"));

                    b.Property<string>("DegreeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DegreeId");

                    b.ToTable("Degree");

                    b.HasData(
                        new
                        {
                            DegreeId = 1,
                            DegreeName = "Bachelor’s Degree"
                        },
                        new
                        {
                            DegreeId = 2,
                            DegreeName = "Master’s Degree"
                        },
                        new
                        {
                            DegreeId = 3,
                            DegreeName = "Doctoral Degree"
                        },
                        new
                        {
                            DegreeId = 4,
                            DegreeName = "Professional Degree"
                        },
                        new
                        {
                            DegreeId = 5,
                            DegreeName = "Joint Degree"
                        });
                });

            modelBuilder.Entity("IntalioTask.DBL.Entities.Applicant", b =>
                {
                    b.HasOne("IntalioTask.DBL.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntalioTask.DBL.Entities.Degree", "Degree")
                        .WithMany()
                        .HasForeignKey("DegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Degree");
                });

            modelBuilder.Entity("IntalioTask.DBL.Entities.City", b =>
                {
                    b.HasOne("IntalioTask.DBL.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("IntalioTask.DBL.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
